==20400== Memcheck, a memory error detector
==20400== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20400== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==20400== Command: ./lem-in
==20400== Parent PID: 20368
==20400== 
==20400== Invalid read of size 8
==20400==    at 0x109D36: count_max_paths (parse_input.c:20)
==20400==    by 0x10A01C: parse_input (parse_input.c:74)
==20400==    by 0x10A327: main (main.c:63)
==20400==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==20400== 
==20400== 
==20400== Process terminating with default action of signal 11 (SIGSEGV)
==20400==  Access not within mapped region at address 0x10
==20400==    at 0x109D36: count_max_paths (parse_input.c:20)
==20400==    by 0x10A01C: parse_input (parse_input.c:74)
==20400==    by 0x10A327: main (main.c:63)
==20400==  If you believe this happened as a result of a stack
==20400==  overflow in your program's main thread (unlikely but
==20400==  possible), you can try to increase the size of the
==20400==  main thread stack using the --main-stacksize= flag.
==20400==  The main thread stack size used in this run was 8388608.
==20400== 
==20400== HEAP SUMMARY:
==20400==     in use at exit: 20,156 bytes in 11 blocks
==20400==   total heap usage: 13 allocs, 2 frees, 92,897 bytes allocated
==20400== 
==20400== LEAK SUMMARY:
==20400==    definitely lost: 0 bytes in 0 blocks
==20400==    indirectly lost: 0 bytes in 0 blocks
==20400==      possibly lost: 0 bytes in 0 blocks
==20400==    still reachable: 20,156 bytes in 11 blocks
==20400==         suppressed: 0 bytes in 0 blocks
==20400== Reachable blocks (those to which a pointer was found) are not shown.
==20400== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==20400== 
==20400== For counts of detected and suppressed errors, rerun with: -v
==20400== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
